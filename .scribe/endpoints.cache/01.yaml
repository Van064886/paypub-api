## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: ''
        required: true
        example: fugit
        type: string
        enumValues: []
        custom: []
      lastname:
        name: lastname
        description: ''
        required: true
        example: quidem
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: kari40@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: illum
        type: string
        enumValues: []
        custom: []
      tel:
        name: tel
        description: ''
        required: false
        example: deleniti
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: porro
        type: string
        enumValues: []
        custom: []
      picture:
        name: picture
        description: 'Must be an image. Must not be greater than 4000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters:
      firstname: fugit
      lastname: quidem
      email: kari40@example.com
      password: illum
      tel: deleniti
      address: porro
    fileParameters:
      picture: null
    responses:
      -
        status: 422
        content: '{"data":[],"is_success":false,"error_message":"\n The password field must be at least 8 characters."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer be6ga1Vd54k863haPDcZvEf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/verify-email
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Activate user account'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: ward.zachariah@example.com
        type: string
        enumValues: []
        custom: []
      code:
        name: code
        description: ''
        required: true
        example: eum
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: ward.zachariah@example.com
      code: eum
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"data":[],"is_success":false,"error_message":"\u00c9l\u00e9ment inexistant !"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VEge48D1dhPb6a53Zvcf6ka'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/password-forgotten
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Password forgotten'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: borer.glen@example.net
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: borer.glen@example.net
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"data":[],"is_success":false,"error_message":"\u00c9l\u00e9ment inexistant !"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5g6VahD4cPvdkaZ83eb16Ef'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/reset-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Change password with code'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: kautzer.sharon@example.org
        type: string
        enumValues: []
        custom: []
      code:
        name: code
        description: ''
        required: true
        example: consectetur
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'V`=#+d*b.:9vVSX_R{'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: kautzer.sharon@example.org
      code: consectetur
      password: 'V`=#+d*b.:9vVSX_R{'
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"data":[],"is_success":false,"error_message":"\u00c9l\u00e9ment inexistant !"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g6ac4Zb61fDa5Ph3E8kveVd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log user in'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: rempel.alfonzo@example.com
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'AAEd|{r;t>R'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: rempel.alfonzo@example.com
      password: 'AAEd|{r;t>R'
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"data":[],"is_success":false,"error_message":"Identifiants incorrects"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a3g8V14hb6PfeDa6EkvdcZ5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/request-code
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Request validation code'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: fvon@example.org
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: fvon@example.org
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"data":[],"is_success":false,"error_message":"\u00c9l\u00e9ment inexistant !"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DkbhPa6d65gc18avf4VZE3e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aZ6g43EVekP8hDd5v16cbaf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/change-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      old_password:
        name: old_password
        description: ''
        required: true
        example: reiciendis
        type: string
        enumValues: []
        custom: []
      new_password:
        name: new_password
        description: ''
        required: true
        example: laudantium
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      old_password: reiciendis
      new_password: laudantium
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86haV4ga6e35PDbd1fEvZkc'
    controller: null
    method: null
    route: null
    custom: []
