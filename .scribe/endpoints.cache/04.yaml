## Autogenerated by Scribe. DO NOT MODIFY.

name: Enterprises
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'enterprises/{enterprise_id}'
    metadata:
      groupName: Enterprises
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get an enterprise'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      enterprise_id:
        name: enterprise_id
        description: 'The ID of the enterprise.'
        required: true
        example: 5
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      enterprise_id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e6dh13D5bkaa6Pv4fZEgcV8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'enterprises/{enterprise_id}'
    metadata:
      groupName: Enterprises
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an enterprise informations'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      enterprise_id:
        name: enterprise_id
        description: 'The ID of the enterprise.'
        required: true
        example: 19
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      enterprise_id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: sit
        type: string
        enumValues: []
        custom: []
      activity_sector:
        name: activity_sector
        description: ''
        required: false
        example: 7
        type: integer
        enumValues: []
        custom: []
      logo:
        name: logo
        description: 'Must be an image. Must not be greater than 4000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: sit
      activity_sector: 7
    fileParameters:
      logo: null
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ev8VghDebPcZ6531af4ka6d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'enterprises/{enterprise_id}'
    metadata:
      groupName: Enterprises
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an enterprise'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      enterprise_id:
        name: enterprise_id
        description: 'The ID of the enterprise.'
        required: true
        example: 15
        type: integer
        enumValues: []
        custom: []
    cleanUrlParameters:
      enterprise_id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 81eZ64aakf6V3cDEhdPgv5b'
    controller: null
    method: null
    route: null
    custom: []
