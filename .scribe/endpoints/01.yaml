name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: ''
        required: true
        example: corrupti
        type: string
        enumValues: []
        custom: []
      lastname:
        name: lastname
        description: ''
        required: true
        example: voluptatum
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: orion45@example.net
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: omnis
        type: string
        enumValues: []
        custom: []
      tel:
        name: tel
        description: ''
        required: false
        example: repellendus
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: neque
        type: string
        enumValues: []
        custom: []
      picture:
        name: picture
        description: 'Must be an image. Must not be greater than 4000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        custom: []
    cleanBodyParameters:
      firstname: corrupti
      lastname: voluptatum
      email: orion45@example.net
      password: omnis
      tel: repellendus
      address: neque
    fileParameters:
      picture: null
    responses:
      -
        status: 422
        content: '{"data":[],"is_success":false,"error_message":"\n The password field must be at least 8 characters."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 584V1Pav6fZd3Dcg6kEbhea'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/verify-email
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Activate user account'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: nola33@example.com
        type: string
        enumValues: []
        custom: []
      code:
        name: code
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: nola33@example.com
      code: est
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"data":[],"is_success":false,"error_message":"\u00c9l\u00e9ment inexistant !"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EZ1abaf35vkd4gD86cePhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/password-forgotten
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Password forgotten'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: maxime46@example.com
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: maxime46@example.com
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"data":[],"is_success":false,"error_message":"\u00c9l\u00e9ment inexistant !"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4abPvZk635gf1c6eVdhEa8D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/reset-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Change password with code'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: tate.schamberger@example.com
        type: string
        enumValues: []
        custom: []
      code:
        name: code
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: KtAa;i~.
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: tate.schamberger@example.com
      code: earum
      password: KtAa;i~.
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"data":[],"is_success":false,"error_message":"\u00c9l\u00e9ment inexistant !"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V5a3hDdeE66b8f4aPgvk1Zc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log user in'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: vergie17@example.net
        type: string
        enumValues: []
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'M~F~.n`Np]UXga'
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: vergie17@example.net
      password: 'M~F~.n`Np]UXga'
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"data":[],"is_success":false,"error_message":"Identifiants incorrects"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P6ah8k63bvfdcD4VE1egZa5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/request-code
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Request validation code'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: owen55@example.org
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      email: owen55@example.org
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"data":[],"is_success":false,"error_message":"\u00c9l\u00e9ment inexistant !"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6dkZ86gVE3af5Pec4Dhv1ba'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v8ke6Z35cVbfEa6dPDga41h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/change-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      old_password:
        name: old_password
        description: ''
        required: true
        example: ex
        type: string
        enumValues: []
        custom: []
      new_password:
        name: new_password
        description: ''
        required: true
        example: nihil
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      old_password: ex
      new_password: nihil
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v43EgPVk656ecdDbf8aZah1'
    controller: null
    method: null
    route: null
    custom: []
